#include<stdio.h>
#include<stdlib.h>
int board[3][3];

int instructions()
{
    int i,j;
    printf("the row and column number of baord are:\n");    for(i=1;i<4;i++)
    {
        printf(">>>>>>>\n");
        for(j=1;j<4;j++)
        printf("^%d%d",i,j);
        printf("^\n");
    }
    printf("refer to them and play the game:\n");
}
int intialze()
{
    int i,j,k=3;
    for(i=0; i<3; i++)
    {
        for(j=0; j<3; j++)
            board[i][j]=k++;
    }
}
int take()
{
    int i,j,num,n,l;
    for(n=0; n<9; n++)
    {
        printf("1.enter row number and column number:");
        scanf("%d%d",&i,&j);
        i=i-1;
        j=j-1;
        l=icheck(i,j);
        man:{
        if(l)
        {
        printf("enter another row and column number");
        scanf("%d%d",&i,&j);     
        i=i-1;
        j=j-1;
        l=icheck(i,j);
        if(l)
        goto man;
        }}
        board[i][j]=0;
        printf("2.enter row number and column number:");
        scanf("%d%d",&i,&j);
        i=i-1;
        j=j-1;
        l=icheck(i,j);
        sos:{
        if(l)
        {
        printf("enter another row and column number");
        scanf("%d%d",&i,&j);
        i=i-1;
        j=j-1;     
        l=icheck(i,j);
        if(l)
        goto sos;
        }}
        board[i][j]=1;
        check();
        display();
    }
}
int icheck(int i,int j)
{
    
    if(board[i][j]==0||board[i][j]==1)
    {
        printf("already values exist...\n");
        
        return(1);
    }
    else 
    return(0);
    
}
int check()
{
    horizontal();
    vertical();
    diagonal();
}
int display()
{
    int i,j;

    for(i=0; i<3; i++)
    {
        printf(">>>>>>>\n");
        for(j=0; j<3; j++)
        {
            if(board[i][j]==0||board[i][j]==1)
                printf("^%d",board[i][j]);
            else
                printf("^ ");
        }
        printf("^\n");
    }


}


int horizontal()
{
    int i=0,j=0,k,m;
    k=board[i][j];

    for(i=0; i<3; i++)
    {
        m=0;
        for(j=1; j<3; j++)
        {
            if(k==board[j][i])
            {
                m++;
                continue;
            }
        }
        if(m==2)
        {
            printf("____________________________");
            display();
            printf("____________________________");
            if(k==0)
                printf("\nplayer 1 won");
            else
                printf("\nplayer 2 won");
            exit(1);
        }
        k=board[0][i+1];
    }
}
int vertical()
{
    int i=0,j=0,k,m;
    k=board[i][j];

    for(i=0; i<3; i++)
    {
        m=0;
        for(j=1; j<3; j++)
        {
            if(k==board[i][j])
            {
                m++;
                continue;
            }
        }
        if(m==2)
        {
            printf("____________________________");
            display();
            printf("____________________________");
            if(k==0)
                printf("]nplayer 1 won");
            else
                printf("\nplayer 2 won");
            exit(1);
        }
        k=board[i+1][0];
    }
}
int diagonal()
{
    if((board[0][2]==board[1][1])&&(board[2][0]==board [1][1]))
    {
        printf("____________________________");
        display();
        printf("____________________________");
        if(board[0][2]==0)
            printf("\nplayer 1 won");
        else
            printf("\nplayer 2 won");
        exit(1);
    }
    if((board[0][0]==board[1][1])&&(board[1][1]==board [2][2]))
    {  
        printf("____________________________");
        display();
        printf("____________________________");
     if(board[0][0]==0)
            printf("\nplayer 1 won");
        else
            printf("\nplayer 2 won");
        exit(1);
    }

}
int main()
{
    instructions();
    intialze();
    take();
}
